<component>
    <name>bncertwebserverfunctions</name>
    <show>0</show>
    <functionDefinitionList>
        <!-- Actions used exclusively inside this file -->
        <actionDefinition name="bncertPopulateWebServerParameters">
            <actionList>
                <setInstallerVariable name="web_server_name" value=""/>
                <apachePopulateWebServerParameters>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <fileExists path="${installdir}/apache"/>
                        <fileExists path="${installdir}/apache2"/>
                    </ruleList>
                </apachePopulateWebServerParameters>
                <nginxPopulateWebServerParameters>
                  <ruleList>
                        <!-- NGINX does not take precedence over previously detected web servers -->
                        <stringTest text="${web_server_name}" type="empty"/>
                        <!-- We will only support the NGINX web server for images based on Bash scripts -->
                        <compareText text="${installation_type}" logic="equals" value="bash"/>
                    </ruleList>
                </nginxPopulateWebServerParameters>
                <!-- Common parameters -->
                <setInstallerVariable name="web_servers_supported_message">
                <value>Currently only installations using the Apache or NGINX web servers are supported. Please follow the alternative approach described in this guide:

https://docs.bitnami.com/general/how-to/generate-install-lets-encrypt-ssl/#alternative-approach

</value>
                </setInstallerVariable>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertWebServerConfigurationFiles">
            <parameterList>
                <stringParameter name="variable"/>
            </parameterList>
            <actionList>
                <globalVariables names="${variable}"/>
                <apacheConfigurationFiles variable="${variable}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheConfigurationFiles>
                <nginxConfigurationFiles variable="${variable}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="nginx"/>
                    </ruleList>
                </nginxConfigurationFiles>
            </actionList>
        </actionDefinition>
        <!-- Rules -->
        <ruleDefinition name="bncertIsHttpsRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsHttpsRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsCustomHttpsRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsCustomHttpsRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsNonWwwToWwwRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsNonWwwToWwwRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsCustomNonWwwToWwwRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsCustomNonWwwToWwwRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsWwwToNonWwwRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsWwwToNonWwwRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsCustomWwwToNonWwwRedirectionEnabled">
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <apacheIsCustomWwwToNonWwwRedirectionEnabled/>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </ruleGroup>
                <!-- TODO: Support this method for the NGINX web server -->
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsWebServerValid">
            <actionList>
                <bncertPopulateWebServerParameters/>
                <bncertWebServerConfigurationFiles variable="web_server_conf_files"/>
                <setInstallerVariable name="is_valid" value="1"/>
                <!-- Ensure the configuration files exist and are both readable and writable -->
                <foreach variables="conf_file" values="${web_server_conf_files}">
                    <actionList>
                        <setInstallerVariable name="is_valid" value="0">
                            <ruleList>
                                <fileTest condition="not_exists" path="${conf_file}"/>
                                <!-- Do not check certificate files, which may have been changed by users -->
                                <regExMatch pattern="^.*\.(crt|key)$" logic="does_not_match" text="${conf_file}"/>
                            </ruleList>
                        </setInstallerVariable>
                    </actionList>
                </foreach>
            </actionList>
            <ruleList>
                <isTrue value="${is_valid}"/>
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsWebServerPermissionsValid">
            <actionList>
                <bncertPopulateWebServerParameters/>
                <bncertWebServerConfigurationFiles variable="web_server_conf_files"/>
                <setInstallerVariable name="is_valid" value="1"/>
                <!-- Ensure the configuration files exist and are both readable and writable -->
                <foreach variables="conf_file" values="${web_server_conf_files}">
                    <actionList>
                        <setInstallerVariable name="is_valid" value="0">
                            <ruleList>
                                <ruleGroup>
                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                    <ruleList>
                                        <fileTest path="${conf_file}" condition="is_directory"/>
                                        <fileTest path="${conf_file}" condition="not_readable"/>
                                        <fileTest path="${conf_file}" condition="not_writable"/>
                                    </ruleList>
                                </ruleGroup>
                                <!-- Do not check certificate files, which may have been changed by users -->
                                <regExMatch pattern="^.*\.(crt|key)$" logic="does_not_match" text="${conf_file}"/>
                            </ruleList>
                        </setInstallerVariable>
                    </actionList>
                </foreach>
            </actionList>
            <ruleList>
                <isTrue value="${is_valid}"/>
            </ruleList>
        </ruleDefinition>
        <ruleDefinition name="bncertIsWebServerConfigurationValid">
            <actionList>
                <bncertPopulateWebServerParameters/>
            </actionList>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <apacheIsWebServerConfigurationValid>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheIsWebServerConfigurationValid>
                <nginxIsWebServerConfigurationValid>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="nginx"/>
                    </ruleList>
                </nginxIsWebServerConfigurationValid>
            </ruleList>
        </ruleDefinition>
        <!-- Actions related to web server -->
        <actionDefinition name="bncertBackupWebServerConfiguration">
            <actionList>
                <bncertWebServerConfigurationFiles variable="web_server_conf_files"/>
                <foreach variables="conf_file" values="${web_server_conf_files}">
                    <actionList>
                        <backupFile file="${conf_file}"/>
                    </actionList>
                </foreach>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertRestoreWebServerConfiguration">
            <actionList>
                <bncertWebServerConfigurationFiles variable="web_server_conf_files"/>
                <foreach variables="conf_file" values="${web_server_conf_files}">
                    <actionList>
                        <restoreFile file="${conf_file}"/>
                    </actionList>
                </foreach>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertStopWebServer">
            <parameterList>
                <stringParameter name="webServerName"/>
            </parameterList>
            <actionList>
                <setInstallerVariable name="varnish_enabled" value="1">
                    <ruleList>
                        <isVarnishEnabled/>
                    </ruleList>
                </setInstallerVariable>
                <manageService action="stop" service="varnish">
                    <ruleList>
                        <isTrue value="${varnish_enabled}"/>
                    </ruleList>
                </manageService>
                <manageService action="stop" service="${webServerName}"/>
                <waitForPort port="80" state="free" timeout="30000"/>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertStartWebServer">
            <parameterList>
                <stringParameter name="webServerName"/>
            </parameterList>
            <actionList>
                <!-- Currently a restart is required because Bnconfig starts the web server before changing the configuration -->
                <manageService action="restart" service="${webServerName}"/>
                <manageService action="restart" service="varnish">
                    <ruleList>
                        <isTrue value="${varnish_enabled}"/>
                    </ruleList>
                </manageService>
                <waitForPort port="80" state="in_use" timeout="30000"/>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertConfigureServerName">
            <parameterList>
                <stringParameter name="serverName"/>
            </parameterList>
            <actionList>
                <apacheConfigureServerName serverName="${serverName}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheConfigureServerName>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertConfigureCertificates">
            <parameterList>
                <stringParameter name="keyFile"/>
                <stringParameter name="crtFile"/>
            </parameterList>
            <actionList>
                <apacheConfigureCertificates keyFile="${keyFile}" crtFile="${crtFile}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheConfigureCertificates>
                <nginxConfigureCertificates keyFile="${keyFile}" crtFile="${crtFile}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="nginx"/>
                    </ruleList>
                </nginxConfigureCertificates>
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertEnableWebServerConfigurationPatches">
            <actionList>
                <apacheEnableConfigurationPatches>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheEnableConfigurationPatches>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertDisableWebServerConfigurationPatches">
            <actionList>
                <apacheDisableConfigurationPatches>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheDisableConfigurationPatches>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertEnableHttpsRedirection">
            <actionList>
                <apacheEnableHttpsRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheEnableHttpsRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertDisableHttpsRedirection">
            <actionList>
                <apacheDisableHttpsRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheDisableHttpsRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertEnableNonWwwToWwwRedirection">
            <actionList>
                <apacheEnableNonWwwToWwwRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheEnableNonWwwToWwwRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertDisableNonWwwToWwwRedirection">
            <actionList>
                <apacheDisableNonWwwToWwwRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheDisableNonWwwToWwwRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertEnableWwwToNonWwwRedirection">
            <actionList>
                <apacheEnableWwwToNonWwwRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheEnableWwwToNonWwwRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertDisableWwwToNonWwwRedirection">
            <actionList>
                <apacheDisableWwwToNonWwwRedirection>
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheDisableWwwToNonWwwRedirection>
                <!-- TODO: Support this method for the NGINX web server -->
            </actionList>
        </actionDefinition>
        <actionDefinition name="bncertWebServerConfigureApp">
            <parameterList>
                <directoryParameter name="appDirectory"/>
                <directoryParameter name="appWebDirectory"/>
            </parameterList>
            <actionList>
                <apacheConfigureApp appDirectory="${appDirectory}" appWebDirectory="${appWebDirectory}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="apache"/>
                    </ruleList>
                </apacheConfigureApp>
                <nginxConfigureApp appDirectory="${appDirectory}" appWebDirectory="${appWebDirectory}">
                    <ruleList>
                        <compareText text="${web_server_name}" logic="equals" value="nginx"/>
                    </ruleList>
                </nginxConfigureApp>
            </actionList>
        </actionDefinition>
    </functionDefinitionList>
</component>
